// Generated by view binder compiler. Do not edit!
package com.lecturador.android.applecturador.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.design.widget.TextInputLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.Spinner;
import android.widget.TextView;
import com.lecturador.android.applecturador.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDescargarBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnSincronizar;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextInputLayout tilAnio;

  @NonNull
  public final TextInputLayout tilMes;

  @NonNull
  public final TextView tvMesf;

  @NonNull
  public final EditText txtAnio;

  @NonNull
  public final EditText txtMes;

  private FragmentDescargarBinding(@NonNull FrameLayout rootView, @NonNull Button btnSincronizar,
      @NonNull Spinner spinner, @NonNull TextView textView2, @NonNull TextInputLayout tilAnio,
      @NonNull TextInputLayout tilMes, @NonNull TextView tvMesf, @NonNull EditText txtAnio,
      @NonNull EditText txtMes) {
    this.rootView = rootView;
    this.btnSincronizar = btnSincronizar;
    this.spinner = spinner;
    this.textView2 = textView2;
    this.tilAnio = tilAnio;
    this.tilMes = tilMes;
    this.tvMesf = tvMesf;
    this.txtAnio = txtAnio;
    this.txtMes = txtMes;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDescargarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDescargarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_descargar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDescargarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSincronizar;
      Button btnSincronizar = ViewBindings.findChildViewById(rootView, id);
      if (btnSincronizar == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.tilAnio;
      TextInputLayout tilAnio = ViewBindings.findChildViewById(rootView, id);
      if (tilAnio == null) {
        break missingId;
      }

      id = R.id.tilMes;
      TextInputLayout tilMes = ViewBindings.findChildViewById(rootView, id);
      if (tilMes == null) {
        break missingId;
      }

      id = R.id.tvMesf;
      TextView tvMesf = ViewBindings.findChildViewById(rootView, id);
      if (tvMesf == null) {
        break missingId;
      }

      id = R.id.txtAnio;
      EditText txtAnio = ViewBindings.findChildViewById(rootView, id);
      if (txtAnio == null) {
        break missingId;
      }

      id = R.id.txtMes;
      EditText txtMes = ViewBindings.findChildViewById(rootView, id);
      if (txtMes == null) {
        break missingId;
      }

      return new FragmentDescargarBinding((FrameLayout) rootView, btnSincronizar, spinner,
          textView2, tilAnio, tilMes, tvMesf, txtAnio, txtMes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
